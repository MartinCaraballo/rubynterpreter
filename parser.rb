#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "parser.racc".
#

require 'racc/parser.rb'


require 'strscan'
require_relative 'expressions'
require_relative 'statements'

class Lexer
  NUMBER = /\d+(\.\d+)?/
  BOOL = /true|false/
  KEYWORDS = /if|else|while|print/
  ID = /[a-zA-Z_]\w*/
  OPERS = /[-+*\/(){};]|[!=<>]=?|&&|\|\|/
  IGNORE = /(\/\/.*(\n|$)|\s)+/
  
  def initialize(input)
    @ss = StringScanner.new(input)
  end

  def next_token
    @ss.scan(IGNORE)
    return if @ss.eos?
    case
    when text = @ss.scan(NUMBER) then [:NUM, text.to_f]
    when text = @ss.scan(BOOL) then [:BOOL, text == "true"]
    when text = @ss.scan(KEYWORDS) then [text, text]
    when text = @ss.scan(ID) then [:ID, text]
    when text = @ss.scan(OPERS) then [text, text]
    else
      throw "Unexpected character #{@ss.getch}!"
    end
  end
end

class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 117)

def next_token
  @lexer.next_token
end

def tokenize_string(input)
  @lexer = Lexer.new(input)
  tokens = []
  while token = @lexer.next_token
    tokens << token
  end
  tokens
end

def parse_string(input)
  @lexer = Lexer.new(input)
  do_parse
end


...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    27,    26,    20,    21,    22,    23,    24,    25,    18,    19,
    16,    17,    27,    26,    20,    21,    22,    23,    24,    25,
    14,    59,    27,    26,    20,    21,    22,    23,    24,    25,
    18,    19,    16,    17,    27,    26,    20,    21,    22,    23,
    24,    25,    28,    61,    27,    26,    20,    21,    22,    23,
    24,    25,    18,    19,    16,    17,    27,    26,   -31,   -31,
   -31,   -31,   -31,   -31,    33,    62,    27,    26,    20,    21,
    22,    23,    24,    25,    18,    19,    16,    17,    34,    35,
    11,    40,    12,    27,     4,    66,     5,    63,     6,    13,
    67,   nil,     7,     8,     9,    10,    11,   nil,    12,   nil,
     4,   nil,     5,    31,     6,    13,   nil,   nil,     7,     8,
     9,    10,    11,   nil,    12,    11,    36,    12,   nil,    36,
   nil,    13,   nil,   nil,    13,   nil,     9,    10,   nil,     9,
    10,    11,   nil,    12,    11,    36,    12,   nil,    36,   nil,
    13,   nil,   nil,    13,   nil,     9,    10,   nil,     9,    10,
    11,   nil,    12,    11,    36,    12,   nil,    36,   nil,    13,
   nil,   nil,    13,   nil,     9,    10,   nil,     9,    10,    11,
   nil,    12,    11,    36,    12,   nil,    36,   nil,    13,   nil,
   nil,    13,   nil,     9,    10,   nil,     9,    10,    11,   nil,
    12,    11,    36,    12,   nil,    36,   nil,    13,   nil,   nil,
    13,   nil,     9,    10,   nil,     9,    10,    11,   nil,    12,
    11,    36,    12,   nil,    36,   nil,    13,   nil,   nil,    13,
   nil,     9,    10,   nil,     9,    10,    11,   nil,    12,    11,
    36,    12,   nil,    36,   nil,    13,   nil,   nil,    13,   nil,
     9,    10,   nil,     9,    10,    11,   nil,    12,    11,    36,
    12,   nil,    36,   nil,    13,   nil,   nil,    13,   nil,     9,
    10,   nil,     9,    10,    11,   nil,    12,   nil,     4,   nil,
     5,    54,     6,    13,   nil,   nil,     7,     8,     9,    10,
    11,   nil,    12,    11,    36,    12,   nil,    36,   nil,    13,
   nil,   nil,    13,   nil,     9,    10,   nil,     9,    10,    11,
   nil,    12,   nil,    36,   nil,   nil,   nil,   nil,    13,   nil,
   nil,   nil,   nil,     9,    10,    11,   nil,    12,   nil,     4,
   nil,     5,   nil,     6,    13,   nil,   nil,     7,     8,     9,
    10,    11,   nil,    12,   nil,     4,   nil,     5,   nil,     6,
    13,   nil,   nil,     7,     8,     9,    10,    11,   nil,    12,
   nil,     4,   nil,     5,   nil,     6,    13,   nil,   nil,     7,
     8,     9,    10,    27,    26,    20,    21,    22,    23,    24,
    25,    18,    19,    16,    17,   nil,   nil,    15,    27,    26,
    20,    21,    22,    23,    24,    25,    18,    19,    16,    17,
   nil,   nil,    15,    27,    26,    20,    21,    22,    23,    24,
    25,    18,    19,    16,    17,   nil,   nil,    60,    27,    26,
    20,    21,    22,    23,    24,    25,    18,    19,    16,    17,
    27,    26,    20,    21,    22,    23,    24,    25,    18,    19,
    16,    17,    27,    26,    20,    21,    22,    23,    24,    25,
    18,    19,    27,    26,    20,    21,    22,    23,    24,    25,
    18,    19,    27,    26,   -31,   -31,   -31,   -31,   -31,   -31,
    27,    26,   -31,   -31,   -31,   -31,   -31,   -31,    27,    26,
   -31,   -31,   -31,   -31,   -31,   -31,    27,    26,   -31,   -31,
   -31,   -31,   -31,   -31,    27,    26,   -31,   -31,   -31,   -31,
   -31,   -31 ]

racc_action_check = [
    39,    39,    39,    39,    39,    39,    39,    39,    39,    39,
    39,    39,    43,    43,    43,    43,    43,    43,    43,    43,
     1,    39,    56,    56,    56,    56,    56,    56,    56,    56,
    56,    56,    56,    56,    44,    44,    44,    44,    44,    44,
    44,    44,     4,    56,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    45,    45,    45,    45,
    45,    45,    45,    45,     6,    57,    58,    58,    58,    58,
    58,    58,    58,    58,    58,    58,    58,    58,     7,     8,
     0,    14,     0,    51,     0,    63,     0,    58,     0,     0,
    64,   nil,     0,     0,     0,     0,     5,   nil,     5,   nil,
     5,   nil,     5,     5,     5,     5,   nil,   nil,     5,     5,
     5,     5,    11,   nil,    11,    12,    11,    12,   nil,    12,
   nil,    11,   nil,   nil,    12,   nil,    11,    11,   nil,    12,
    12,    13,   nil,    13,    16,    13,    16,   nil,    16,   nil,
    13,   nil,   nil,    16,   nil,    13,    13,   nil,    16,    16,
    17,   nil,    17,    18,    17,    18,   nil,    18,   nil,    17,
   nil,   nil,    18,   nil,    17,    17,   nil,    18,    18,    19,
   nil,    19,    20,    19,    20,   nil,    20,   nil,    19,   nil,
   nil,    20,   nil,    19,    19,   nil,    20,    20,    21,   nil,
    21,    22,    21,    22,   nil,    22,   nil,    21,   nil,   nil,
    22,   nil,    21,    21,   nil,    22,    22,    23,   nil,    23,
    24,    23,    24,   nil,    24,   nil,    23,   nil,   nil,    24,
   nil,    23,    23,   nil,    24,    24,    25,   nil,    25,    26,
    25,    26,   nil,    26,   nil,    25,   nil,   nil,    26,   nil,
    25,    25,   nil,    26,    26,    27,   nil,    27,    28,    27,
    28,   nil,    28,   nil,    27,   nil,   nil,    28,   nil,    27,
    27,   nil,    28,    28,    30,   nil,    30,   nil,    30,   nil,
    30,    30,    30,    30,   nil,   nil,    30,    30,    30,    30,
    33,   nil,    33,    34,    33,    34,   nil,    34,   nil,    33,
   nil,   nil,    34,   nil,    33,    33,   nil,    34,    34,    35,
   nil,    35,   nil,    35,   nil,   nil,   nil,   nil,    35,   nil,
   nil,   nil,   nil,    35,    35,    61,   nil,    61,   nil,    61,
   nil,    61,   nil,    61,    61,   nil,   nil,    61,    61,    61,
    61,    62,   nil,    62,   nil,    62,   nil,    62,   nil,    62,
    62,   nil,   nil,    62,    62,    62,    62,    67,   nil,    67,
   nil,    67,   nil,    67,   nil,    67,    67,   nil,   nil,    67,
    67,    67,    67,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,   nil,   nil,     3,    29,    29,
    29,    29,    29,    29,    29,    29,    29,    29,    29,    29,
   nil,   nil,    29,    53,    53,    53,    53,    53,    53,    53,
    53,    53,    53,    53,    53,   nil,   nil,    53,    37,    37,
    37,    37,    37,    37,    37,    37,    37,    37,    37,    37,
    38,    38,    38,    38,    38,    38,    38,    38,    38,    38,
    38,    38,    41,    41,    41,    41,    41,    41,    41,    41,
    41,    41,    42,    42,    42,    42,    42,    42,    42,    42,
    42,    42,    46,    46,    46,    46,    46,    46,    46,    46,
    47,    47,    47,    47,    47,    47,    47,    47,    48,    48,
    48,    48,    48,    48,    48,    48,    49,    49,    49,    49,
    49,    49,    49,    49,    50,    50,    50,    50,    50,    50,
    50,    50 ]

racc_action_pointer = [
    67,    20,   nil,   361,    24,    83,    42,    56,    57,   nil,
   nil,    99,   102,   118,    81,   nil,   121,   137,   140,   156,
   159,   175,   178,   194,   197,   213,   216,   232,   235,   376,
   251,   nil,   nil,   267,   270,   286,   nil,   406,   418,    -2,
   nil,   430,   440,    10,    32,    54,   450,   458,   466,   474,
   482,    81,   nil,   391,   nil,   nil,    20,    42,    64,   nil,
   nil,   302,   318,    69,    66,   nil,   nil,   334,   nil ]

racc_action_default = [
   -31,   -31,    -1,    -2,   -13,   -31,   -31,   -31,   -31,   -14,
   -15,   -31,   -31,   -31,   -31,    -3,   -31,   -31,   -31,   -31,
   -31,   -31,   -31,   -31,   -31,   -31,   -31,   -31,   -31,   -31,
   -31,    -6,   -11,   -31,   -31,   -31,   -13,   -16,   -17,   -31,
    69,   -18,   -19,   -20,   -21,   -22,   -23,   -24,   -25,   -26,
   -27,   -28,   -29,   -31,    -5,   -12,   -31,   -31,   -31,   -30,
    -4,   -31,   -31,   -31,    -8,    -9,   -10,   -31,    -7 ]

racc_goto_table = [
     2,     3,     1,    30,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,    37,    38,    39,   nil,   nil,    41,    42,    43,
    44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
    55,   nil,   nil,   nil,    56,    57,    58,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    64,    65,   nil,   nil,   nil,   nil,    68 ]

racc_goto_check = [
     2,     3,     1,     4,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,     3,     3,     3,   nil,   nil,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     2,   nil,   nil,   nil,     3,     3,     3,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,     2,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     2,     0,     1,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,    29,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 30, :_reduce_1,
  1, 30, :_reduce_2,
  2, 31, :_reduce_3,
  4, 31, :_reduce_4,
  3, 31, :_reduce_5,
  2, 31, :_reduce_6,
  7, 31, :_reduce_7,
  5, 31, :_reduce_8,
  5, 31, :_reduce_9,
  5, 31, :_reduce_10,
  1, 33, :_reduce_11,
  2, 33, :_reduce_12,
  1, 32, :_reduce_13,
  1, 32, :_reduce_14,
  1, 32, :_reduce_15,
  2, 32, :_reduce_16,
  2, 32, :_reduce_17,
  3, 32, :_reduce_18,
  3, 32, :_reduce_19,
  3, 32, :_reduce_20,
  3, 32, :_reduce_21,
  3, 32, :_reduce_22,
  3, 32, :_reduce_23,
  3, 32, :_reduce_24,
  3, 32, :_reduce_25,
  3, 32, :_reduce_26,
  3, 32, :_reduce_27,
  3, 32, :_reduce_28,
  3, 32, :_reduce_29,
  3, 32, :_reduce_30 ]

racc_reduce_n = 31

racc_shift_n = 69

racc_token_table = {
  false => 0,
  :error => 1,
  "||" => 2,
  "&&" => 3,
  "==" => 4,
  "!=" => 5,
  "<" => 6,
  "<=" => 7,
  ">" => 8,
  ">=" => 9,
  "*" => 10,
  "/" => 11,
  "+" => 12,
  "-" => 13,
  :UMINUS => 14,
  "!" => 15,
  ";" => 16,
  :ID => 17,
  "=" => 18,
  "{" => 19,
  "}" => 20,
  "if" => 21,
  "(" => 22,
  ")" => 23,
  "else" => 24,
  "while" => 25,
  "print" => 26,
  :NUM => 27,
  :BOOL => 28 }

racc_nt_base = 29

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"||\"",
  "\"&&\"",
  "\"==\"",
  "\"!=\"",
  "\"<\"",
  "\"<=\"",
  "\">\"",
  "\">=\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "UMINUS",
  "\"!\"",
  "\";\"",
  "ID",
  "\"=\"",
  "\"{\"",
  "\"}\"",
  "\"if\"",
  "\"(\"",
  "\")\"",
  "\"else\"",
  "\"while\"",
  "\"print\"",
  "NUM",
  "BOOL",
  "$start",
  "target",
  "stmt",
  "exp",
  "stmts" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_1(val, _values)
     val[0]
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_2(val, _values)
     val[0]
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_3(val, _values)
     ExprStmt.new(val[0])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 24)
  def _reduce_4(val, _values)
     Assignment.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_5(val, _values)
     Block.new(val[1])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_6(val, _values)
     Block.new()
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_7(val, _values)
     IfThenElse.new(val[2], val[4], val[6])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_8(val, _values)
     IfThenElse.new(val[2], val[4], nil)
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_9(val, _values)
     WhileDo.new(val[2], val[4])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_10(val, _values)
     PrintStmt.new(val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_11(val, _values)
     [val[0]]
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_12(val, _values)
     val[0] << val[1]
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_13(val, _values)
     VariableExp.new(val[0])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_14(val, _values)
     Numeral.new(val[0])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_15(val, _values)
     TruthValue.new(val[0])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_16(val, _values)
     Minus.new(val[1])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_17(val, _values)
     Negation.new(val[1])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_18(val, _values)
     Addition.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_19(val, _values)
     Subtraction.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_20(val, _values)
     Multiplication.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_21(val, _values)
     Division.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_22(val, _values)
     ComparisonEqual.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_23(val, _values)
     ComparisonDifferent.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_24(val, _values)
     ComparisonLessThan.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_25(val, _values)
     ComparisonLessThanOrEqual.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_26(val, _values)
     ComparisonGreaterThan.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_27(val, _values)
     ComparisonGreaterThanOrEqual.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_28(val, _values)
     LogicalAnd.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_29(val, _values)
     LogicalOr.new(val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_30(val, _values)
     val[1]
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


